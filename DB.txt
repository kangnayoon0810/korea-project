DROP DATABASE IF EXISTS HT_AM;
CREATE DATABASE HT_AM;
USE HT_AM;


CREATE TABLE board (
  id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
  , boardName VARCHAR(20) NOT NULL
);

INSERT INTO board SET boardName = 'memberArticle';
INSERT INTO board SET boardName = 'trainerArticle';

SELECT * FROM board;

CREATE TABLE `member` (
  id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
  , regDate DATETIME NOT NULL
  , updateDate DATETIME NOT NULL
  , `name` VARCHAR(50) NOT NULL
  , sex INT UNSIGNED NOT NULL DEFAULT 1 COMMENT '남자 = 0, 여자 = 1'
  , nickName VARCHAR(50) UNIQUE NOT NULL
  , phoneNumber INT UNSIGNED UNIQUE NOT NULL
  , loginId VARCHAR(50) UNIQUE NOT NULL
  , loginPw VARCHAR(100) NOT NULL
  , eMail VARCHAR(50) UNIQUE NOT NULL
  , authLevel INT UNSIGNED NOT NULL COMMENT '관리자는 = 0, 회원 = 1, 트레이너 = 2'
);

drop table `member`;

INSERT INTO `member`
    SET regDate = now()
        , updateDate = now()
        , `name` =
        , nickName =
        , phoneNumber =
        , loginId = 
        , loginPw = 
        , eMail = 
        
select * from `member`;

CREATE TABLE article (
  id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
  , boardId INT UNSIGNED NOT NULL
  , regDate DATETIME NOT NULL
  , updateDate DATETIME NOT NULL
  , memberId INT UNSIGNED NOT NULL
  , content TEXT NOT NULL
  , `area` varchar(50)
  , viewCnt INT UNSIGNED NOT NULL DEFAULT 0
  , memberCategory int UNSIGNED NOT NULL COMMENT '관리자는 = 0, 회원 = 1, 트레이너 = 2'
);

insert into article
    set boardId = 1
        , regDate = now()
        , updateDate = now()
        , memberId = 1
        , content = '테스트용 게시글'
        , viewCnt = 0
        , memberCategory = 1;
        
INSERT INTO article
    SET boardId = 1
        , regDate = NOW()
        , updateDate = NOW()
        , memberId = 1
        , content = '테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글 테스트용 게시글'
        , viewCnt = 0
        , memberCategory = 1;
    

drop table article;

CREATE TABLE comments (
  id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
  , regDate DATETIME NOT NULL
  , updateDate DATETIME NOT NULL
  , memberId INT UNSIGNED NOT NULL
  , relTypeCode VARCHAR(20) NOT NULL
  , relId INT UNSIGNED NOT NULL
  , content TEXT NOT NULL
);

select count(id)
    from comments
    where relId = 2
    and relTypeCode = 'article';
    
SELECT COUNT(c.id)
			 	FROM article a
			 	INNER JOIN comments c
			 	ON a.id = c.relId
			 	WHERE c.relid = 2
			 	AND c.relTypeCode = 'article'

select * from comments;

SELECT * FROM comments
WHERE relTypeCode = 'article'
AND relId = 2;

DROP TABLE `comment`;

insert into comments (regDate, updateDate, memberId, relTypeCode, relId, content)
value (now(), now(), 1, 'article', 1, '테스트용 댓글');

CREATE TABLE likePoint (
  memberId INT UNSIGNED NOT NULL
  , relTypeCode VARCHAR(20) NOT NULL
  , relId INT UNSIGNED NOT NULL
);

select * from trainer;

SELECT DATABASE();


SELECT a.*, m.nickName
			    FROM article a
			    INNER JOIN `member` m
			    ON a.memberId = m.id
			    WHERE boardId = 1
			    
				ORDER BY a.id DESC
				
				
SELECT a.*, m.nickName, COUNT(c.id) `commentCnt`
			    FROM article a
			    INNER JOIN `member` m
			    ON a.memberId = m.id
			    LEFT JOIN comments c
			 	ON a.id = c.relId
			 	AND c.relTypeCode = 'article'
			    WHERE boardId = 1
				GROUP BY a.id
				ORDER BY a.id DESC
select * from  article;

SELECT a.*, m.nickName, COUNT(c.id) `commentCnt`
			 	FROM article a
			 	INNER JOIN `member` m
			 	ON a.memberId = m.id
			 	LEFT JOIN comments c
			 	ON a.id = c.relId
			 	and c.relTypeCode = 'article'
			 	WHERE a.id = 2